
def 0 {
    sound_Stop();
    back_SetGround(LEVEL_G01P06B);
    supervision_Acting(0);
    with (performer 0) {
        camera_SetMyself();
    }
    with (performer 0) {
        MovePositionOffset(32896, -200, 0);
    }
    Wait(1);
    with (actor ACTOR_PLAYER) {
        SetAnimation(64);
    }
    with (actor ACTOR_ATTENDANT1) {
        SetAnimation(64);
    }
    with (actor ACTOR_NPC_PERAPPU) {
        SetAnimation(43);
    }
    with (actor ACTOR_NPC_DOGOOMU) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_DIGUDA) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_DAGUTORIO) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_KIMAWARI) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_HEIGANI) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_BIPPA) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_GUREGGURU) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_CHIRIIN) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_ZUBATTO) {
        SetAnimation(43);
    }
    with (actor ACTOR_NPC_DOGAASU) {
        SetAnimation(43);
    }
    with (actor ACTOR_NPC_SUKATANKU) {
        SetAnimation(42);
    }
    with (actor ACTOR_NPC_PERAPPU) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_NPC_CHIRIIN) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_NPC_HEIGANI) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_NPC_BIPPA) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_NPC_DOGOOMU) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_PLAYER) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_ATTENDANT1) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_NPC_SUKATANKU) {
        SetEffect(EFFECT_EATING, 3);
    }
    with (actor ACTOR_NPC_DIGUDA) {
        SetEffect(EFFECT_EATING_SLOW, 3);
    }
    with (actor ACTOR_NPC_DAGUTORIO) {
        SetEffect(EFFECT_EATING_SLOW, 3);
    }
    with (actor ACTOR_NPC_GUREGGURU) {
        SetEffect(EFFECT_EATING_SLOW, 3);
    }
    with (actor ACTOR_NPC_KIMAWARI) {
        SetEffect(EFFECT_EATING_SLOW, 3);
    }
    with (actor ACTOR_NPC_ZUBATTO) {
        SetEffect(EFFECT_EATING_SLOW, 3);
    }
    with (actor ACTOR_NPC_DOGAASU) {
        SetEffect(EFFECT_EATING_SLOW, 3);
    }
    with (object OBJECT_G01P06B1_107) {
        SetAnimation(20);
    }
    WaitLockLives(5, ACTOR_NPC_PUKURIN);
    Unlock(5);
    bgm_PlayFadeIn(BGM_EATING, 60, 256);
    screen_FadeIn(1, 30);
    message_ImitationSound({
        english="Crunch munch! Chomp chomp! Gobble gulp!\nCrunch munch! Chomp chomp! Gobble gulp!",
        french="Cronch cronch! Miam miam! Slurp slurp!\nCronch cronch! Miam miam! Slurp slurp!",
        german="Stopf-schling! Schmatz! Schlabber-schlürf!\nStopf-schling! Schmatz! Schlabber-schlürf!",
        italian="Crunch-munch! Ingurg ingurg! Snuffle-slurp!\nGnam-gnam! Crunch-crunch! Slurp-slurp!",
        spanish="¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!\n¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!",
    });
    message_ImitationSound({
        english="Crunch munch! Chomp chomp! Gobble gulp!\nCrunch munch! Chomp chomp! Gobble gulp!",
        french="Cronch cronch! Miam miam! Slurp slurp!\nCronch cronch! Miam miam! Slurp slurp!",
        german="Stopf-schling! Schmatz! Schlabber-schlürf!\nStopf-schling! Schmatz! Schlabber-schlürf!",
        italian="Crunch-munch! Ingurg ingurg! Snuffle-slurp!\nGnam-gnam! Crunch-crunch! Slurp-slurp!",
        spanish="¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!\n¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!",
    });
    message_ImitationSound({
        english="Crunch munch! Chomp chomp! Gobble gulp!\nCrunch munch! Chomp chomp! Gobble gulp!",
        french="Cronch cronch! Miam miam! Slurp slurp!\nCronch cronch! Miam miam! Slurp slurp!",
        german="Stopf-schling! Schmatz! Schlabber-schlürf!\nStopf-schling! Schmatz! Schlabber-schlürf!",
        italian="Crunch-munch! Ingurg ingurg! Snuffle-slurp!\nGnam-gnam! Crunch-crunch! Slurp-slurp!",
        spanish="¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!\n¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!",
    });
    message_ImitationSound({
        english="Crunch munch! Chomp chomp! Gobble gulp!\nCrunch munch! Chomp chomp! Gobble gulp!",
        french="Cronch cronch! Miam miam! Slurp slurp!\nCronch cronch! Miam miam! Slurp slurp!",
        german="Stopf-schling! Schmatz! Schlabber-schlürf!\nStopf-schling! Schmatz! Schlabber-schlürf!",
        italian="Crunch-munch! Ingurg ingurg! Snuffle-slurp!\nGnam-gnam! Crunch-crunch! Slurp-slurp!",
        spanish="¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!\n¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!",
    });
    message_ImitationSound({
        english="Crunch munch! Chomp chomp! Gobble gulp!\nCrunch munch! Chomp chomp! Gobble gulp!",
        french="Cronch cronch! Miam miam! Slurp slurp!\nCronch cronch! Miam miam! Slurp slurp!",
        german="Stopf-schling! Schmatz! Schlabber-schlürf!\nStopf-schling! Schmatz! Schlabber-schlürf!",
        italian="Crunch-munch! Ingurg ingurg! Snuffle-slurp!\nGnam-gnam! Crunch-crunch! Slurp-slurp!",
        spanish="¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!\n¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!",
    });
    message_ImitationSound({
        english="Crunch munch! Chomp chomp! Gobble gulp!\nCrunch munch! Chomp chomp! Gobble gulp!",
        french="Cronch cronch! Miam miam! Slurp slurp!\nCronch cronch! Miam miam! Slurp slurp!",
        german="Stopf-schling! Schmatz! Schlabber-schlürf!\nStopf-schling! Schmatz! Schlabber-schlürf!",
        italian="Crunch-munch! Ingurg ingurg! Snuffle-slurp!\nGnam-gnam! Crunch-crunch! Slurp-slurp!",
        spanish="¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!\n¡Ñam, ñam! ¡Glup, glup! ¡Ñem, ñem!",
    });
    message_CloseEnforce();
    bgm_FadeOut(60);
    screen_FadeOut(1, 30);
    WaitBgm(BGM_EATING);
    Wait(60);
    end;
}

def 1 for_actor(ACTOR_NPC_PUKURIN) {
    SetAnimation(5);
    SetEffect(EFFECT_APPLE_ON_HEAD, 3);
    Lock(5);
    §label_0;
    forever {
        Turn2Direction(8, 1, DIR_UP);
        Wait(20);
        Turn2Direction(8, 1, DIR_DOWN);
        Wait(20);
        continue;  // may be redundant
    }
}
